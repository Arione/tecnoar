/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrame_MODELOS;

import JFrame_TecnoAr.Main;
import Conexao.Conexao;
import JTableModels.MyTableCellEditor;
import JTableModels.TableModel;
import Log.arquivoLog;
import Renderers.CellRenderer;
import Uteis.Data;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import javax.swing.AbstractCellEditor;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author Guedes
 */
public class jfCadastrarLivroCov extends javax.swing.JFrame
{
    /**
     * Creates new form jfCadastrarLivroCov
     */
    Conexao conexao;
    pesquisarUsuario user;
    Data date = new Data();
    private Date dataAtual;
    Main appMain;
    private boolean alterarLivro;
    private int indice;
    public JTable tabelaDeslocamento;
    public TableModel modelo = new TableModel();
    public CellRenderer cell_1,cell_2,cell_3,cell_4,cell_5;
    public jfCadastrarLivroCov(Conexao con, Main app) 
    {
        this.conexao = con;
        this.appMain = app;
        this.alterarLivro = false;
        this.indice = 0;
        user = new pesquisarUsuario(conexao);
        initComponents();
        CriaJTABLET();
        //Hora.start();
        
        dataAtual = jxEscalaData.getDate();
        limparTela();
        this.jScrollPane1.getVerticalScrollBar().setUnitIncrement(50);//rolagem rapida 
        this.setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().createImage(this.getClass().getResource("/Imagens/Query.png")));
    }
    private void CriaJTABLET()
    {
        modelo.setNumRows(0);
        modelo.addColumn("Viaturas");
        modelo.addColumn("KM Inicial");
        modelo.addColumn("KM Final");
        modelo.addColumn("KM Rodado");
        modelo.addColumn("Destino");
        modelo.addColumn("KM ABASTEC.");
        modelo.addColumn("Litros");
        modelo.setCellEditable(true);
        tabelaDeslocamento = new JTable(modelo);
        //tabela.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabelaDeslocamento.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        tabelaDeslocamento.setAutoCreateRowSorter(true);
        tabelaDeslocamento.setSelectionMode(0);
        tabelaDeslocamento.setBackground(new Color(204,204,204));
        tabelaDeslocamento.setSelectionBackground(new Color(0,102,102));
        tabelaDeslocamento.setSelectionForeground(Color.WHITE);
        tabelaDeslocamento.setFont(new Font(null, Font.PLAIN, 14));
        cell_1 = new CellRenderer();
        cell_1.setHorizontalAlignment(JLabel.CENTER);
        cell_2 = new CellRenderer();
        cell_3 = new CellRenderer();
        cell_3.setHorizontalAlignment(JLabel.CENTER);
        cell_4 = new CellRenderer();
        cell_4.setHorizontalAlignment(JLabel.CENTER);
        cell_5 = new CellRenderer();
        //cell_1.setBackground(Color.GRAY);
        //cell_1.setForeground(Color.BLACK);
        tabelaDeslocamento.getColumnModel().getColumn(0).setCellRenderer(cell_1);
        tabelaDeslocamento.getColumnModel().getColumn(1).setCellRenderer(cell_2);
        tabelaDeslocamento.getColumnModel().getColumn(2).setCellRenderer(cell_3);
        tabelaDeslocamento.getColumnModel().getColumn(3).setCellRenderer(cell_4);
        tabelaDeslocamento.getColumnModel().getColumn(4).setCellRenderer(cell_5);
        tabelaDeslocamento.setDragEnabled(false);
        tabelaDeslocamento.getTableHeader().setReorderingAllowed(false);//ESTE É PARA NÃO ARRASTAR AS COLUNAS COM O MOUSE
        tabelaDeslocamento.setShowGrid(true);
        tabelaDeslocamento.setGridColor(Color.lightGray);
    }
    
    private Thread Hora = new Thread()
    {
        @Override
        public void run()
        {
          try
          {
            while(true)
            {
                jlData.setText(date.getData()+", "+date.getHora()+"hs");
            }
          }catch(Exception s){}
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jxEscalaData = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaAssuncao = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jtPostoUR59 = new javax.swing.JTextField();
        jtGuerraUR59 = new javax.swing.JTextField();
        jtPostoABR28 = new javax.swing.JTextField();
        jtGuerraABR28 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jtPostoABT29 = new javax.swing.JTextField();
        jtGuerraABT29 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jtPostoAS50 = new javax.swing.JTextField();
        jtGuerraAS50 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jsTabelaDeslocamento = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcCombustivelMotosserra = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jcCombustivelDesencarcerador = new javax.swing.JComboBox<>();
        jcCombustivelPopa = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jsQuantidadeMotosserra = new javax.swing.JSpinner();
        jsQuantidadeDesencarcerador = new javax.swing.JSpinner();
        jsQuantidadePopa = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jtAlteracaoUR = new javax.swing.JTextField();
        jtAlteracaoABR = new javax.swing.JTextField();
        jtAlteracaoABT = new javax.swing.JTextField();
        jtAlteracaoAS = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        jtManutencaoUR = new javax.swing.JTextField();
        jtManutencaoABR = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jtManutencaoABT = new javax.swing.JTextField();
        jtManutencaoAS = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jTextField16 = new javax.swing.JTextField();
        jtDocumentosUR = new javax.swing.JTextField();
        jtDocumentosABR = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jtDocumentosABT = new javax.swing.JTextField();
        jtDocumentosAS = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtaPassagemServico = new javax.swing.JTextArea();
        jlNomeCompleto = new javax.swing.JLabel();
        jlMatricula = new javax.swing.JLabel();
        jlPostoAdjunto = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jlStatus = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jbSalvarLivroAdjunto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jbCancelarLivroAdjunto = new javax.swing.JButton();
        jlData = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chefe dos Motoristas - Livro de Alterações Diárias");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jxEscalaData.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jxEscalaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jxEscalaDataActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("I - ASSUNÇÃO DO SERVIÇO"));

        jtaAssuncao.setColumns(20);
        jtaAssuncao.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        jtaAssuncao.setLineWrap(true);
        jtaAssuncao.setRows(3);
        jtaAssuncao.setEnabled(false);
        jScrollPane2.setViewportView(jtaAssuncao);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("II - ESCALA DE SERVIÇO"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("função: Condutor Operador");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("POSTO/GRAD.");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("MILITAR (nome de Guerra)");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.setText("UR 59");
        jTextField1.setEnabled(false);

        jtPostoUR59.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtPostoUR59.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtPostoUR59.setEnabled(false);

        jtGuerraUR59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGuerraUR59ActionPerformed(evt);
            }
        });

        jtPostoABR28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtPostoABR28.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtPostoABR28.setEnabled(false);

        jtGuerraABR28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGuerraABR28ActionPerformed(evt);
            }
        });

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField6.setText("ABR 28");
        jTextField6.setEnabled(false);

        jtPostoABT29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtPostoABT29.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtPostoABT29.setEnabled(false);

        jtGuerraABT29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGuerraABT29ActionPerformed(evt);
            }
        });

        jTextField9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField9.setText("ABT 29");
        jTextField9.setEnabled(false);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField2.setText("AS 50");
        jTextField2.setEnabled(false);

        jtPostoAS50.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtPostoAS50.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtPostoAS50.setEnabled(false);

        jtGuerraAS50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGuerraAS50ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jtPostoAS50, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(jtPostoABT29, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jtPostoABR28, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jtPostoUR59, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtGuerraAS50, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jtGuerraABT29, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtGuerraABR28, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtGuerraUR59, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPostoUR59, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtGuerraUR59, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPostoABR28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtGuerraABR28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPostoABT29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtGuerraABT29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPostoAS50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtGuerraAS50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("III - DESLOCAMENTO DE VIATURAS"));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsTabelaDeslocamento)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsTabelaDeslocamento, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("IV - ABASTECIMENTO EQUIPAMENTOS MOTOMECANIZADOS"));

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField3.setText("Motoserra/Motopoda");
        jTextField3.setEnabled(false);

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField7.setText("Desencarcerador");
        jTextField7.setEnabled(false);

        jTextField10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField10.setText("Motor de popa");
        jTextField10.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("EQUIPAMENTO");

        jcCombustivelMotosserra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não houve", "Gasolina", "Gasolina Aditivada", "Diesel", "Diesel S10", "Álcool" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("COMBUSTÍVEL");

        jcCombustivelDesencarcerador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não houve", "Gasolina", "Gasolina Aditivada", "Diesel", "Diesel S10", "Álcool" }));

        jcCombustivelPopa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não houve", "Gasolina", "Gasolina Aditivada", "Diesel", "Diesel S10", "Álcool" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("QUANTIDADE");

        jsQuantidadeMotosserra.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jsQuantidadeDesencarcerador.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jsQuantidadePopa.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcCombustivelMotosserra, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcCombustivelDesencarcerador, 0, 151, Short.MAX_VALUE)
                    .addComponent(jcCombustivelPopa, 0, 151, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jsQuantidadeMotosserra)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsQuantidadeDesencarcerador)
                    .addComponent(jsQuantidadePopa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcCombustivelMotosserra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsQuantidadeMotosserra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcCombustivelDesencarcerador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsQuantidadeDesencarcerador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcCombustivelPopa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsQuantidadePopa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("V - ALTERAÇÃO DE VIATURAS"));

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField4.setText("UR 59");
        jTextField4.setEnabled(false);

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField8.setText("ABR 28");
        jTextField8.setEnabled(false);

        jTextField11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField11.setText("ABT 29");
        jTextField11.setEnabled(false);

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField5.setText("AS 50");
        jTextField5.setEnabled(false);

        jtAlteracaoUR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtAlteracaoUR.setText("Sem alteração");
        jtAlteracaoUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtAlteracaoURActionPerformed(evt);
            }
        });

        jtAlteracaoABR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtAlteracaoABR.setText("Sem alteração");
        jtAlteracaoABR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtAlteracaoABRActionPerformed(evt);
            }
        });

        jtAlteracaoABT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtAlteracaoABT.setText("Sem alteração");
        jtAlteracaoABT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtAlteracaoABTActionPerformed(evt);
            }
        });

        jtAlteracaoAS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtAlteracaoAS.setText("Sem alteração");
        jtAlteracaoAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtAlteracaoASActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField8)
                    .addComponent(jTextField4)
                    .addComponent(jTextField11, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtAlteracaoABT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtAlteracaoABR, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtAlteracaoAS, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAlteracaoUR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAlteracaoUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAlteracaoABR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAlteracaoABT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAlteracaoAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("VI - MANUTENÇÃO EXECUTADA"));

        jTextField12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField12.setText("UR 59");
        jTextField12.setEnabled(false);

        jtManutencaoUR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtManutencaoUR.setText("Não houve");
        jtManutencaoUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtManutencaoURActionPerformed(evt);
            }
        });

        jtManutencaoABR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtManutencaoABR.setText("Não houve");
        jtManutencaoABR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtManutencaoABRActionPerformed(evt);
            }
        });

        jTextField13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField13.setText("ABR 28");
        jTextField13.setEnabled(false);

        jTextField14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField14.setText("ABT 29");
        jTextField14.setEnabled(false);

        jtManutencaoABT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtManutencaoABT.setText("Não houve");
        jtManutencaoABT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtManutencaoABTActionPerformed(evt);
            }
        });

        jtManutencaoAS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtManutencaoAS.setText("Não houve");
        jtManutencaoAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtManutencaoASActionPerformed(evt);
            }
        });

        jTextField15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField15.setText("AS 50");
        jTextField15.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField13)
                    .addComponent(jTextField12)
                    .addComponent(jTextField14, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtManutencaoABT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtManutencaoABR, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtManutencaoUR, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtManutencaoAS, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtManutencaoUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtManutencaoABR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtManutencaoABT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtManutencaoAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("VII - DOCUMENTOS"));

        jTextField16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField16.setText("UR 59");
        jTextField16.setEnabled(false);

        jtDocumentosUR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtDocumentosUR.setText("Sem alteração");
        jtDocumentosUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDocumentosURActionPerformed(evt);
            }
        });

        jtDocumentosABR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtDocumentosABR.setText("Sem alteração");
        jtDocumentosABR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDocumentosABRActionPerformed(evt);
            }
        });

        jTextField17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField17.setText("ABR 28");
        jTextField17.setEnabled(false);

        jTextField18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField18.setText("ABT 29");
        jTextField18.setEnabled(false);

        jtDocumentosABT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtDocumentosABT.setText("Sem alteração");
        jtDocumentosABT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDocumentosABTActionPerformed(evt);
            }
        });

        jtDocumentosAS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtDocumentosAS.setText("Sem alteração");
        jtDocumentosAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDocumentosASActionPerformed(evt);
            }
        });

        jTextField19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField19.setText("AS 50");
        jTextField19.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField17)
                    .addComponent(jTextField16)
                    .addComponent(jTextField18, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtDocumentosABT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtDocumentosABR, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtDocumentosUR, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtDocumentosAS, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtDocumentosUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtDocumentosABR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtDocumentosABT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtDocumentosAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("IX - PASSAGEM DE SERVIÇO"));

        jtaPassagemServico.setColumns(20);
        jtaPassagemServico.setLineWrap(true);
        jtaPassagemServico.setRows(3);
        jScrollPane7.setViewportView(jtaPassagemServico);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlNomeCompleto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlNomeCompleto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNomeCompleto.setText("Nome - Graduação");

        jlMatricula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlMatricula.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlMatricula.setText("Matrícula: ");

        jlPostoAdjunto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlPostoAdjunto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPostoAdjunto.setText("Chefe dos Motoristas");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlNomeCompleto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlMatricula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlPostoAdjunto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlNomeCompleto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlPostoAdjunto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel3);

        jlStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlStatus.setText(" ");

        jToolBar1.setFloatable(false);

        jbSalvarLivroAdjunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/save.png"))); // NOI18N
        jbSalvarLivroAdjunto.setText("Cadastrar");
        jbSalvarLivroAdjunto.setFocusable(false);
        jbSalvarLivroAdjunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbSalvarLivroAdjunto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbSalvarLivroAdjunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarLivroAdjuntoActionPerformed(evt);
            }
        });
        jToolBar1.add(jbSalvarLivroAdjunto);

        jLabel3.setText("     ");
        jToolBar1.add(jLabel3);

        jbCancelarLivroAdjunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancel.png"))); // NOI18N
        jbCancelarLivroAdjunto.setText("Cancelar");
        jbCancelarLivroAdjunto.setFocusable(false);
        jbCancelarLivroAdjunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCancelarLivroAdjunto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbCancelarLivroAdjunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarLivroAdjuntoActionPerformed(evt);
            }
        });
        jToolBar1.add(jbCancelarLivroAdjunto);

        jlData.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jlData.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlData.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jlData, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jlStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jlStatus)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jlData)
                    .addContainerGap()))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Livro de Alterações Diárias do COV");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jxEscalaData, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jxEscalaData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jxEscalaDataActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jxEscalaDataActionPerformed
    {//GEN-HEADEREND:event_jxEscalaDataActionPerformed
String dataDoDia = new Uteis.Data().getDataAssuncao(jxEscalaData.getDate());
        jtaAssuncao.setText("Eu, "+user.graduacaoUsuario+" "+user.guerraUsuario+", assumi o serviço na função de Chefe "
                 + "dos Motoristas, no dia "+dataDoDia+", com todas as ordens em vigor e alterações constantes em livro.");
    }//GEN-LAST:event_jxEscalaDataActionPerformed

    private void jbSalvarLivroAdjuntoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbSalvarLivroAdjuntoActionPerformed
    {//GEN-HEADEREND:event_jbSalvarLivroAdjuntoActionPerformed
        if(verificaCampos())
        {
            if(alterarLivro)
            {
                if(JOptionPane.showConfirmDialog(null, "Deseja ALTERAR o registro?","Livro do Condutor Operador de Viaturas",JOptionPane.YES_NO_OPTION)==0)
                {
                    if(JOptionPane.showInputDialog("Digite 258 para ALTERAR o registro:").equals("258"))
                    {
                        updateRegistro();
                    }
                }
            }
            else
            {
                if(JOptionPane.showConfirmDialog(null, "Deseja Salvar o registro?","Livro do Condutor Operador de Viaturas",JOptionPane.YES_NO_OPTION)==0)
                {
                    if(JOptionPane.showInputDialog("Digite 123 para SALVAR o registro:").equals("123"))
                    {
                        salvarRegistro();
                    }
                }
            }
        }
    }//GEN-LAST:event_jbSalvarLivroAdjuntoActionPerformed

    private void jbCancelarLivroAdjuntoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbCancelarLivroAdjuntoActionPerformed
    {//GEN-HEADEREND:event_jbCancelarLivroAdjuntoActionPerformed
        if(JOptionPane.showConfirmDialog(null, "Deseja LIMPAR TODOS OS CAMPOS?","Livro do Condutor Operador de Viaturas",JOptionPane.YES_NO_OPTION)==0)
        limparTela();
    }//GEN-LAST:event_jbCancelarLivroAdjuntoActionPerformed

    private void jtGuerraUR59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGuerraUR59ActionPerformed
        String graduacao =  pGraduacao(jtGuerraUR59.getText());
        if(graduacao.equals("XXX"))
        {
            jtGuerraUR59.selectAll();
            jlStatus.setText("MILITAR NÃO ENCONTRADO");
        }
        else
        {
            jtGuerraUR59.setText(jtGuerraUR59.getText().toUpperCase());
            jtPostoUR59.setText(graduacao);
            jlStatus.setText(" ");
            jtGuerraABR28.requestFocus(true);
        }
    }//GEN-LAST:event_jtGuerraUR59ActionPerformed

    private void jtGuerraABT29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGuerraABT29ActionPerformed
        String graduacao =  pGraduacao(jtGuerraABT29.getText());
        if(graduacao.equals("XXX"))
        {
            jtGuerraABT29.selectAll();
            jlStatus.setText("MILITAR NÃO ENCONTRADO");
        }
        else
        {
            jtGuerraABT29.setText(jtGuerraABT29.getText().toUpperCase());
            jtPostoABT29.setText(graduacao);
            jlStatus.setText(" ");
            jtGuerraAS50.requestFocus(true);
        }
    }//GEN-LAST:event_jtGuerraABT29ActionPerformed

    private void jtGuerraAS50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGuerraAS50ActionPerformed
        String graduacao =  pGraduacao(jtGuerraAS50.getText());
        if(graduacao.equals("XXX"))
        {
            jtGuerraAS50.selectAll();
            jlStatus.setText("MILITAR NÃO ENCONTRADO");
        }
        else
        {
            jtGuerraAS50.setText(jtGuerraAS50.getText().toUpperCase());
            jtPostoAS50.setText(graduacao);
            jlStatus.setText(" ");
            //jtGuerraCondutorUR.requestFocus(true);
            jScrollPane1.getVerticalScrollBar().setValue(220);
        }
    }//GEN-LAST:event_jtGuerraAS50ActionPerformed

    private void jtGuerraABR28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGuerraABR28ActionPerformed
    String graduacao =  pGraduacao(jtGuerraABR28.getText());
        if(graduacao.equals("XXX"))
        {
            jtGuerraABR28.selectAll();
            jlStatus.setText("MILITAR NÃO ENCONTRADO");
        }
        else
        {
            jtGuerraABR28.setText(jtGuerraABR28.getText().toUpperCase());
            jtPostoABR28.setText(graduacao);
            jlStatus.setText(" ");
            jtGuerraABT29.requestFocus(true);
        }
    }//GEN-LAST:event_jtGuerraABR28ActionPerformed

    private void jtAlteracaoURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtAlteracaoURActionPerformed
jtAlteracaoABR.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(560);

    }//GEN-LAST:event_jtAlteracaoURActionPerformed

    private void jtAlteracaoABRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtAlteracaoABRActionPerformed
jtAlteracaoABT.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(600);

    }//GEN-LAST:event_jtAlteracaoABRActionPerformed

    private void jtAlteracaoABTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtAlteracaoABTActionPerformed
jtAlteracaoAS.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(660);

    }//GEN-LAST:event_jtAlteracaoABTActionPerformed

    private void jtAlteracaoASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtAlteracaoASActionPerformed
jtManutencaoUR.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(760);

    }//GEN-LAST:event_jtAlteracaoASActionPerformed

    private void jtManutencaoURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtManutencaoURActionPerformed
jtManutencaoABR.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(800);
    }//GEN-LAST:event_jtManutencaoURActionPerformed

    private void jtManutencaoABRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtManutencaoABRActionPerformed
jtManutencaoABT.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(860);
    }//GEN-LAST:event_jtManutencaoABRActionPerformed

    private void jtManutencaoABTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtManutencaoABTActionPerformed
jtManutencaoAS.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(900);
    }//GEN-LAST:event_jtManutencaoABTActionPerformed

    private void jtManutencaoASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtManutencaoASActionPerformed
jtDocumentosUR.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(960);
    }//GEN-LAST:event_jtManutencaoASActionPerformed

    private void jtDocumentosURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDocumentosURActionPerformed
jtDocumentosABR.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(1000);
    }//GEN-LAST:event_jtDocumentosURActionPerformed

    private void jtDocumentosABRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDocumentosABRActionPerformed
jtDocumentosABT.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(1060);
    }//GEN-LAST:event_jtDocumentosABRActionPerformed

    private void jtDocumentosABTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDocumentosABTActionPerformed
jtDocumentosAS.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(1100);
    }//GEN-LAST:event_jtDocumentosABTActionPerformed

    private void jtDocumentosASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDocumentosASActionPerformed
jtaPassagemServico.requestFocus(true);
jScrollPane1.getVerticalScrollBar().setValue(1300);
    }//GEN-LAST:event_jtDocumentosASActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(jfCadastrarLivroCov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(jfCadastrarLivroCov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(jfCadastrarLivroCov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(jfCadastrarLivroCov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                Conexao conect = new Conexao();
                conect.conecta("localhost","root","sementes");
                new jfCadastrarLivroCov(conect,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbCancelarLivroAdjunto;
    private javax.swing.JButton jbSalvarLivroAdjunto;
    private javax.swing.JComboBox<String> jcCombustivelDesencarcerador;
    private javax.swing.JComboBox<String> jcCombustivelMotosserra;
    private javax.swing.JComboBox<String> jcCombustivelPopa;
    private javax.swing.JLabel jlData;
    private javax.swing.JLabel jlMatricula;
    private javax.swing.JLabel jlNomeCompleto;
    private javax.swing.JLabel jlPostoAdjunto;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JSpinner jsQuantidadeDesencarcerador;
    private javax.swing.JSpinner jsQuantidadeMotosserra;
    private javax.swing.JSpinner jsQuantidadePopa;
    private javax.swing.JScrollPane jsTabelaDeslocamento;
    private javax.swing.JTextField jtAlteracaoABR;
    private javax.swing.JTextField jtAlteracaoABT;
    private javax.swing.JTextField jtAlteracaoAS;
    private javax.swing.JTextField jtAlteracaoUR;
    private javax.swing.JTextField jtDocumentosABR;
    private javax.swing.JTextField jtDocumentosABT;
    private javax.swing.JTextField jtDocumentosAS;
    private javax.swing.JTextField jtDocumentosUR;
    private javax.swing.JTextField jtGuerraABR28;
    private javax.swing.JTextField jtGuerraABT29;
    private javax.swing.JTextField jtGuerraAS50;
    private javax.swing.JTextField jtGuerraUR59;
    private javax.swing.JTextField jtManutencaoABR;
    private javax.swing.JTextField jtManutencaoABT;
    private javax.swing.JTextField jtManutencaoAS;
    private javax.swing.JTextField jtManutencaoUR;
    private javax.swing.JTextField jtPostoABR28;
    private javax.swing.JTextField jtPostoABT29;
    private javax.swing.JTextField jtPostoAS50;
    private javax.swing.JTextField jtPostoUR59;
    private javax.swing.JTextArea jtaAssuncao;
    private javax.swing.JTextArea jtaPassagemServico;
    private org.jdesktop.swingx.JXDatePicker jxEscalaData;
    // End of variables declaration//GEN-END:variables

    public void limparTela()
    {
        alterarLivro = false;
        indice = 0;
        jxEscalaData.setDate(dataAtual);
        jtPostoUR59.setText("");
        jtGuerraUR59.setText("");
        jtPostoABR28.setText("");
        jtGuerraABR28.setText("");
        jtPostoABT29.setText("");
        jtGuerraABT29.setText("");
        jtPostoAS50.setText("");
        jtGuerraAS50.setText("");
        jcCombustivelMotosserra.setSelectedIndex(0);
        jcCombustivelDesencarcerador.setSelectedIndex(0);
        jcCombustivelPopa.setSelectedIndex(0);
        jsQuantidadeMotosserra.setValue(0);
        jsQuantidadeDesencarcerador.setValue(0);
        jsQuantidadePopa.setValue(0);
        jtAlteracaoUR.setText("Sem alteração");
        jtAlteracaoABR.setText("Sem alteração");
        jtAlteracaoABT.setText("Sem alteração");
        jtAlteracaoAS.setText("Sem alteração");
        jtManutencaoUR.setText("Não houve");
        jtManutencaoABR.setText("Não houve");
        jtManutencaoABT.setText("Não houve");
        jtManutencaoAS.setText("Não houve");
        jtDocumentosUR.setText("Sem alteração");
        jtDocumentosABR.setText("Sem alteração");
        jtDocumentosABT.setText("Sem alteração");
        jtDocumentosAS.setText("Sem alteração");
        jlStatus.setText("");
        assuncaoServico();
        leiturasIniciais();
        passagemServico();
        jlData.setText(date.getData()+", "+date.getHora()+"hs");
    }

    private void leiturasIniciais()
    {
        modelo.setNumRows(0);
        conexao.executeSQL("select * from bombeiro_19.livrocov ORDER BY livrocov_id DESC LIMIT 1");
       try
        {
            conexao.resultset.first();
                modelo.addRow(new Object[]{"UR 59",conexao.resultset.getObject("km_final_ur"),"","","Base 19ºSGBM","",""});
                modelo.addRow(new Object[]{"ABR 28",conexao.resultset.getObject("km_final_abr"),"","","Base 19ºSGBM","",""});
                modelo.addRow(new Object[]{"ABT 29",conexao.resultset.getObject("km_final_abt"),"","","Base 19ºSGBM","",""});
                modelo.addRow(new Object[]{"AS 50",conexao.resultset.getObject("km_final_as"),"","","Base 19ºSGBM","",""});
            jsTabelaDeslocamento.setViewportView(tabelaDeslocamento);
        }
        catch(SQLException er)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+er.getMessage();
            new arquivoLog(log);
            if(er.getMessage().contains("empty"))
            {
                modelo.addRow(new Object[]{"UR 59","","","","Base 19ºSGBM","",""});
                modelo.addRow(new Object[]{"ABR 28","","","","Base 19ºSGBM","",""});
                modelo.addRow(new Object[]{"ABT 29","","","","Base 19ºSGBM","",""});
                modelo.addRow(new Object[]{"AS 50","","","","Base 19ºSGBM","",""});
                jsTabelaDeslocamento.setViewportView(tabelaDeslocamento);
            }
        }
       //tabela.setComponentPopupMenu(popMenu);
    }
        

    private void assuncaoServico()
     {
         jtaAssuncao.setText("Eu, "+user.graduacaoUsuario+" "+user.guerraUsuario+", assumi o serviço na função de Chefe "
                 + "dos Motoristas, no dia , com todas as ordens em vigor e alterações constantes em livro");
     }
     private void passagemServico()
     {
         jtaPassagemServico.setText("Fiz ao meu Substituto legal, o XXXXXXXX , onde transmiti todas as"
                 + " ordens em vigor e alterações constantes em livro.");
         jlNomeCompleto.setText(user.nomeUsuario);
         jlMatricula.setText("Matrícula: "+user.matriculaUsuario);
     }

    private boolean verificaCampos()
    {
        try
        {
            Date dataLivro;
            String auxDataAdjunto="";
            dataLivro = jxEscalaData.getDate();
            auxDataAdjunto = new Uteis.Data().getData(dataLivro);
        }
        catch(NullPointerException npe1)
        {
            jxEscalaData.requestFocus(); 
            jlStatus.setText("Necessário escolher DATA");
            return false;
        }
        if(jtaAssuncao.getText().length()<50)
        {
            jtaAssuncao.requestFocus(true);
            jtaAssuncao.selectAll();
            jlStatus.setText("Assunção do Serviço - necessário preencher");
            jScrollPane1.getVerticalScrollBar().setValue(1);
            return false;
        }
        if(jtPostoUR59.getText().length()<2)
        {
            jtGuerraUR59.requestFocus(true);
            jtGuerraUR59.selectAll();
            jlStatus.setText("Condutor UR59 - necessário preencher");
            jScrollPane1.getVerticalScrollBar().setValue(1);
            return false;
        }
        if(jtPostoABR28.getText().length()<2)
        {
            jtGuerraABR28.requestFocus(true);
            jtGuerraABR28.selectAll();
            jlStatus.setText("Condutor ABR28 - necessário preencher");
            jScrollPane1.getVerticalScrollBar().setValue(1);
            return false;
        }
        if(jtPostoABT29.getText().length()<2)
        {
            jtGuerraABT29.requestFocus(true);
            jtGuerraABT29.selectAll();
            jlStatus.setText("Condutor ABT29 - necessário preencher");
            jScrollPane1.getVerticalScrollBar().setValue(1);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(0,0).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher nome da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(0,1).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM INICIAL da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(0,1).toString())<0)
            {
                 jlStatus.setText("KM INICIAL INVÁLIDO da 1ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM INICIAL INVÁLIDO da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(0,2).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM FINAL da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(0,2).toString())<0)
            {
                 jlStatus.setText("KM FINAL INVÁLIDO da 1ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM FINAL INVÁLIDO da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        /*
        if(tabelaDeslocamento.getValueAt(0,3).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM RODADO da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        */
        try
        {
            int km_inicial = Integer.parseInt(tabelaDeslocamento.getValueAt(0,1).toString());
            int km_final = Integer.parseInt(tabelaDeslocamento.getValueAt(0,2).toString());
            int km_rodado = km_final - km_inicial;
            tabelaDeslocamento.setValueAt(km_rodado, 0, 3);
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(0,3).toString())<0)
            {
                 jlStatus.setText("KM RODADO INVÁLIDO da 1ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
            
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM RODADO INVÁLIDO da 1ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(1,0).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher nome da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(1,1).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher KM INICIAL da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(1,1).toString())<0)
            {
                 jlStatus.setText("KM INICIAL INVÁLIDO da 2ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM INICIAL INVÁLIDO da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(1,2).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM FINAL da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(1,2).toString())<0)
            {
                 jlStatus.setText("KM FINAL INVÁLIDO da 2ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM FINAL INVÁLIDO da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        /*
        if(tabelaDeslocamento.getValueAt(1,3).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM RODADO da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        */
        try
        {
            int km_inicial = Integer.parseInt(tabelaDeslocamento.getValueAt(1,1).toString());
            int km_final = Integer.parseInt(tabelaDeslocamento.getValueAt(1,2).toString());
            int km_rodado = km_final - km_inicial;
            tabelaDeslocamento.setValueAt(km_rodado, 1, 3);
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(1,3).toString())<0)
            {
                 jlStatus.setText("KM RODADO INVÁLIDO da 2ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
            
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM RODADO INVÁLIDO da 2ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(2,0).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher nome da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        
        if(tabelaDeslocamento.getValueAt(2,1).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher KM INICIAL da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(2,1).toString())<0)
            {
                 jlStatus.setText("KM INICIAL INVÁLIDO da 3ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM INICIAL INVÁLIDO da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(2,2).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM FINAL da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(2,2).toString())<0)
            {
                 jlStatus.setText("KM FINAL INVÁLIDO da 3ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM FINAL INVÁLIDO da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        /*
        if(tabelaDeslocamento.getValueAt(2,3).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM RODADO da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }*/
        try
        {
            int km_inicial = Integer.parseInt(tabelaDeslocamento.getValueAt(2,1).toString());
            int km_final = Integer.parseInt(tabelaDeslocamento.getValueAt(2,2).toString());
            int km_rodado = km_final - km_inicial;
            tabelaDeslocamento.setValueAt(km_rodado, 2, 3);
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(2,3).toString())<0)
            {
                 jlStatus.setText("KM RODADO INVÁLIDO da 3ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
            
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM RODADO INVÁLIDO da 3ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(3,0).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher nome da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        
        if(tabelaDeslocamento.getValueAt(3,1).toString().length()<3)
        {
            jlStatus.setText("Necessário preencher KM INICIAL da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(3,1).toString())<0)
            {
                 jlStatus.setText("KM INICIAL INVÁLIDO da 4ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM INICIAL INVÁLIDO da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(tabelaDeslocamento.getValueAt(3,2).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM FINAL da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        try
        {
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(3,2).toString())<0)
            {
                 jlStatus.setText("KM FINAL INVÁLIDO da 4ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM FINAL INVÁLIDO da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        /*
        if(tabelaDeslocamento.getValueAt(3,3).toString().length()<1)
        {
            jlStatus.setText("Necessário preencher KM RODADO da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }*/
        try
        {
            int km_inicial = Integer.parseInt(tabelaDeslocamento.getValueAt(3,1).toString());
            int km_final = Integer.parseInt(tabelaDeslocamento.getValueAt(3,2).toString());
            int km_rodado = km_final - km_inicial;
            tabelaDeslocamento.setValueAt(km_rodado, 3, 3);
            if(Integer.parseInt(tabelaDeslocamento.getValueAt(3,3).toString())<0)
            {
                 jlStatus.setText("KM RODADO INVÁLIDO da 4ª Viatura");
                jScrollPane1.getVerticalScrollBar().setValue(200);
                return false;
            }
            
        }
        catch(NumberFormatException nfe)
        {
            jlStatus.setText("KM RODADO INVÁLIDO da 4ª Viatura");
            jScrollPane1.getVerticalScrollBar().setValue(200);
            return false;
        }
        if(jtAlteracaoUR.getText().length()<5)
        {
            jtAlteracaoUR.requestFocus(true);
            jtAlteracaoUR.selectAll();
            jlStatus.setText("Preencher alteração da VTR UR59");
            jScrollPane1.getVerticalScrollBar().setValue(500);
            return false;
        }
        if(jtAlteracaoABR.getText().length()<5)
        {
            jtAlteracaoABR.requestFocus(true);
            jtAlteracaoABR.selectAll();
            jlStatus.setText("Preencher alteração da VTR ABR28");
            jScrollPane1.getVerticalScrollBar().setValue(560);
            return false;
        }
        if(jtAlteracaoABT.getText().length()<5)
        {
            jtAlteracaoABT.requestFocus(true);
            jtAlteracaoABT.selectAll();
            jlStatus.setText("Preencher alteração da VTR ABT29");
            jScrollPane1.getVerticalScrollBar().setValue(600);
            return false;
        }
        if(jtAlteracaoAS.getText().length()<5)
        {
            jtAlteracaoAS.requestFocus(true);
            jtAlteracaoAS.selectAll();
            jlStatus.setText("Preencher alteração da VTR AS50");
            jScrollPane1.getVerticalScrollBar().setValue(660);
            return false;
        }
        if(jtManutencaoUR.getText().length()<5)
        {
            jtManutencaoUR.requestFocus(true);
            jtManutencaoUR.selectAll();
            jlStatus.setText("Preencher Manutenção da VTR UR59");
            jScrollPane1.getVerticalScrollBar().setValue(760);
            return false;
        }
        if(jtManutencaoABR.getText().length()<5)
        {
            jtManutencaoABR.requestFocus(true);
            jtManutencaoABR.selectAll();
            jlStatus.setText("Preencher Manutenção da VTR ABR28");
            jScrollPane1.getVerticalScrollBar().setValue(800);
            return false;
        }
        if(jtManutencaoABT.getText().length()<5)
        {
            jtManutencaoABT.requestFocus(true);
            jtManutencaoABT.selectAll();
            jlStatus.setText("Preencher Manutenção da VTR ABT29");
            jScrollPane1.getVerticalScrollBar().setValue(860);
            return false;
        }
        if(jtManutencaoAS.getText().length()<5)
        {
            jtManutencaoAS.requestFocus(true);
            jtManutencaoAS.selectAll();
            jlStatus.setText("Preencher Manutenção da VTR AS50");
            jScrollPane1.getVerticalScrollBar().setValue(900);
            return false;
        }
        if(jtDocumentosUR.getText().length()<5)
        {
            jtDocumentosUR.requestFocus(true);
            jtDocumentosUR.selectAll();
            jlStatus.setText("Preencher Documentos da VTR UR59");
            jScrollPane1.getVerticalScrollBar().setValue(960);
            return false;
        }
        if(jtDocumentosABR.getText().length()<5)
        {
            jtDocumentosABR.requestFocus(true);
            jtDocumentosABR.selectAll();
            jlStatus.setText("Preencher Documentos da VTR ABR28");
            jScrollPane1.getVerticalScrollBar().setValue(1000);
            return false;
        }
        if(jtDocumentosABT.getText().length()<5)
        {
            jtDocumentosABT.requestFocus(true);
            jtDocumentosABT.selectAll();
            jlStatus.setText("Preencher Documentos da VTR ABT29");
            jScrollPane1.getVerticalScrollBar().setValue(1060);
            return false;
        }
        if(jtDocumentosAS.getText().length()<5)
        {
            jtDocumentosAS.requestFocus(true);
            jtDocumentosAS.selectAll();
            jlStatus.setText("Preencher Documentos da VTR AS50");
            jScrollPane1.getVerticalScrollBar().setValue(1100);
            return false;
        }
        if(jtaPassagemServico.getText().length()<1)
        {
            jtaPassagemServico.requestFocus(true);
            jtaPassagemServico.selectAll();
            jlStatus.setText("Passagem de Serviço - necessário preencher");
            jScrollPane1.getVerticalScrollBar().setValue(1600);
            return false;
        }
            
        if(jtaPassagemServico.getText().contains("XX"))
        {
            jlStatus.setText("Passagem de Serviço - necessário preencher");
            jScrollPane1.getVerticalScrollBar().setValue(1600);
            return false;
        }
        jtaAssuncao.setText(jtaAssuncao.getText().toUpperCase());
        jtaPassagemServico.setText(jtaPassagemServico.getText().toUpperCase());
        return true;
    }
    public void alterarLivro(int id)
    {
        jlStatus.setText("Alterar Indice: "+id);
        alterarLivro = true;
        indice = id;
        try
        {
            conexao.executeSQL("select * from bombeiro_19.livrocov WHERE livrocov_id="+indice+"");
            conexao.resultset.first();
            jxEscalaData.setDate(Data.dataRequerimento(conexao.resultset.getString("data_livro")));
            jtaAssuncao.setText(conexao.resultset.getString("assuncao"));
            jtPostoUR59.setText(conexao.resultset.getString("posto_condutor_ur"));
            jtGuerraUR59.setText(conexao.resultset.getString("nome_guerra_condutor_ur"));
            jtPostoABR28.setText(conexao.resultset.getString("posto_condutor_abr"));
            jtGuerraABR28.setText(conexao.resultset.getString("nome_guerra_condutor_abr"));
            jtPostoABT29.setText(conexao.resultset.getString("posto_condutor_abt"));
            jtGuerraABT29.setText(conexao.resultset.getString("nome_guerra_condutor_abt"));
            jtPostoAS50.setText(conexao.resultset.getString("posto_condutor_as"));
            jtGuerraAS50.setText(conexao.resultset.getString("nome_guerra_condutor_as"));
            modelo.setNumRows(0);
            modelo.addRow(new Object[]{"UR 59",conexao.resultset.getObject("km_inicial_ur"),conexao.resultset.getObject("km_final_ur"),conexao.resultset.getObject("km_rodado_ur"),conexao.resultset.getObject("destino_ur"),conexao.resultset.getObject("km_abastecido_ur"),conexao.resultset.getObject("litros_ur")});
            modelo.addRow(new Object[]{"ABR 28",conexao.resultset.getObject("km_inicial_abr"),conexao.resultset.getObject("km_final_abr"),conexao.resultset.getObject("km_rodado_abr"),conexao.resultset.getObject("destino_abr"),conexao.resultset.getObject("km_abastecido_abr"),conexao.resultset.getObject("litros_abr")});
            modelo.addRow(new Object[]{"ABT 29",conexao.resultset.getObject("km_inicial_abt"),conexao.resultset.getObject("km_final_abt"),conexao.resultset.getObject("km_rodado_abt"),conexao.resultset.getObject("destino_abt"),conexao.resultset.getObject("km_abastecido_abt"),conexao.resultset.getObject("litros_abt")});
            modelo.addRow(new Object[]{"AS 50",conexao.resultset.getObject("km_inicial_as"),conexao.resultset.getObject("km_final_as"),conexao.resultset.getObject("km_rodado_as"),conexao.resultset.getObject("destino_as"),conexao.resultset.getObject("km_abastecido_as"),conexao.resultset.getObject("litros_as")});
            jcCombustivelMotosserra.setSelectedItem(conexao.resultset.getObject("combustivel_motoserra"));
            jcCombustivelDesencarcerador.setSelectedItem(conexao.resultset.getObject("combustivel_desencarcerador"));
            jcCombustivelPopa.setSelectedItem(conexao.resultset.getObject("combustivel_mpopa"));
            jsQuantidadeMotosserra.setValue(conexao.resultset.getInt("litros_motoserra"));
            jsQuantidadeDesencarcerador.setValue(conexao.resultset.getInt("litros_desencarcerador"));
            jsQuantidadePopa.setValue(conexao.resultset.getInt("litros_mpopa"));
            jtAlteracaoUR.setText(conexao.resultset.getString("alteracao_ur"));
            jtAlteracaoABR.setText(conexao.resultset.getString("alteracao_abr"));
            jtAlteracaoABT.setText(conexao.resultset.getString("alteracao_abt"));
            jtAlteracaoAS.setText(conexao.resultset.getString("alteracao_as"));
            jtManutencaoUR.setText(conexao.resultset.getString("manutencao_ur"));
            jtManutencaoABR.setText(conexao.resultset.getString("manutencao_abr"));
            jtManutencaoABT.setText(conexao.resultset.getString("manutencao_abt"));
            jtManutencaoAS.setText(conexao.resultset.getString("manutencao_as"));
            jtDocumentosUR.setText(conexao.resultset.getString("documentos_ur"));
            jtDocumentosABR.setText(conexao.resultset.getString("documentos_abr"));
            jtDocumentosABT.setText(conexao.resultset.getString("documentos_abt"));
            jtDocumentosAS.setText(conexao.resultset.getString("documentos_as"));       
            jtaPassagemServico.setText(conexao.resultset.getString("passagem_servico"));
            jlNomeCompleto.setText(user.nomeUsuario);
            jlMatricula.setText("Matrícula: "+user.matriculaUsuario);
            jlStatus.setText("Alterar livro da data: "+Data.alteraData(conexao.resultset.getString("data_livro")));
        }
        catch(SQLException er)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+er.getMessage();
            new arquivoLog(log);
            er.printStackTrace();
            jlStatus.setText("SQLException "+er.getMessage());
        }
        catch(NumberFormatException nfe)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+nfe.getMessage();
            new arquivoLog(log);

            jlStatus.setText("NumberFormatException "+nfe.getMessage());
        }
         catch(Exception ex)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+ex.getMessage();
            new arquivoLog(log);
            jlStatus.setText("Exception "+ex.getMessage());
        }
    }
    private void updateRegistro()
    {
        try
        {
            Date dataD = jxEscalaData.getDate();
            String dataLivro = (1900+dataD.getYear())+"-"+(1+dataD.getMonth())+"-"+dataD.getDate();
            Calendar cal = Calendar.getInstance();
            cal.setTime(dataD); // Objeto Date() do usuário
            cal.add(cal.DAY_OF_MONTH, +1);
            Date auxDataProxima = cal.getTime();
            String dataDoDia = new Uteis.Data().getData(dataD);
            String dataDiaSeguinte = new Uteis.Data().getData(auxDataProxima);
            String assuncao = jtaAssuncao.getText();
            String postoCondUr = jtPostoUR59.getText();
            String guerraCondUr = jtGuerraUR59.getText();
            String postoCondAbr = jtPostoABR28.getText();
            String guerraCondAbr = jtGuerraABR28.getText();
            String postoCondAbt = jtPostoABT29.getText();
            String guerraCondAbt = jtGuerraABT29.getText();
            String postoCondAs = jtPostoAS50.getText();
            String guerraCondAs = jtGuerraAS50.getText();
            int km_inicial_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,1).toString());
            int km_inicial_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,1).toString());
            int km_inicial_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,1).toString());
            int km_inicial_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,1).toString());
            int km_final_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,2).toString());
            int km_final_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,2).toString());
            int km_final_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,2).toString());
            int km_final_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,2).toString());
            int km_rodado_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,3).toString());
            int km_rodado_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,3).toString());
            int km_rodado_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,3).toString());
            int km_rodado_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,3).toString());
            String destino_ur = tabelaDeslocamento.getValueAt(0,4).toString();
            String destino_abr = tabelaDeslocamento.getValueAt(1,4).toString();
            String destino_abt = tabelaDeslocamento.getValueAt(2,4).toString();
            String destino_as = tabelaDeslocamento.getValueAt(3,4).toString();
            int km_abastecido_ur;
            int km_abastecido_abr;
            int km_abastecido_abt;
            int km_abastecido_as;
            int litros_ur;
            int litros_abr;
            int litros_abt;
            int litros_as;
            try{km_abastecido_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,5).toString());}catch(NumberFormatException nf1){km_abastecido_ur = 0;}
            try{km_abastecido_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,5).toString());}catch(NumberFormatException nf1){km_abastecido_abr = 0;}
            try{km_abastecido_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,5).toString());}catch(NumberFormatException nf1){km_abastecido_abt = 0;}
            try{km_abastecido_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,5).toString());}catch(NumberFormatException nf1){km_abastecido_as = 0;}
            try{litros_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,6).toString());}catch(NumberFormatException nf1){litros_ur = 0;}
            try{litros_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,6).toString());}catch(NumberFormatException nf1){litros_abr = 0;}
            try{litros_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,6).toString());}catch(NumberFormatException nf1){litros_abt = 0;}
            try{litros_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,6).toString());}catch(NumberFormatException nf1){litros_as = 0;}
            String comb_motosserra = jcCombustivelMotosserra.getSelectedItem().toString();
            String comb_desencarcerador = jcCombustivelDesencarcerador.getSelectedItem().toString();
            String comb_popa = jcCombustivelPopa.getSelectedItem().toString();
            int litros_motoserra = Integer.parseInt(jsQuantidadeMotosserra.getValue().toString());
            int litros_desencarcerador = Integer.parseInt(jsQuantidadeDesencarcerador.getValue().toString());
            int litros_mpopa = Integer.parseInt(jsQuantidadePopa.getValue().toString());
            String alteracao_ur = jtAlteracaoUR.getText();
            String alteracao_abr = jtAlteracaoABR.getText();
            String alteracao_abt = jtAlteracaoABT.getText();
            String alteracao_as = jtAlteracaoAS.getText();
            String manutencao_ur = jtManutencaoUR.getText();
            String manutencao_abr = jtManutencaoABR.getText();
            String manutencao_abt = jtManutencaoABT.getText();
            String manutencao_as = jtManutencaoAS.getText();
            String documentos_ur = jtDocumentosUR.getText();
            String documentos_abr = jtDocumentosABR.getText();
            String documentos_abt = jtDocumentosABT.getText();
            String documentos_as = jtDocumentosAS.getText();
            String passagemServico = jtaPassagemServico.getText();
            String nomeCompletoAssinatura = jlNomeCompleto.getText();
            String matriculaAssinatura = jlMatricula.getText();
            String postoCovAssinatura = jlPostoAdjunto.getText();
            String sqlUpdate = "UPDATE bombeiro_19.livrocov SET "
                    + "data_livro='"+dataLivro+"',"
                    + "data_dia='"+dataDoDia+"',"
                    + "data_amanha='"+dataDiaSeguinte+"',"
                    + "assuncao='"+assuncao +"',"
                    + "passagem_servico='"+passagemServico +"',"
                    + "nome_completo_assinatura='"+nomeCompletoAssinatura +"',"
                    + "matricula_assinatura='"+matriculaAssinatura +"',"
                    + "posto_cov_assinatura='"+postoCovAssinatura +"',"
                    + "posto_condutor_ur='"+postoCondUr+"',"
                    + "posto_condutor_abr='"+postoCondAbr+"',"
                    + "posto_condutor_abt='"+postoCondAbt+"',"
                    + "posto_condutor_as='"+postoCondAs+"',"
                    + "nome_guerra_condutor_ur='"+guerraCondUr+"',"
                    + "nome_guerra_condutor_abr='"+guerraCondAbr+"',"
                    + "nome_guerra_condutor_abt='"+guerraCondAbt+"',"
                    + "nome_guerra_condutor_as='"+guerraCondAs+"',"
                    + "km_inicial_ur="+ ""+km_inicial_ur+","
                    + "km_inicial_abr="+ ""+km_inicial_abr+","
                    + "km_inicial_abt="+ ""+km_inicial_abt+","
                    + "km_inicial_as="+ ""+km_inicial_as+","
                    + "km_final_ur="+ ""+km_final_ur+","
                    + "km_final_abr="+ ""+km_final_abr+","
                    + "km_final_abt="+ ""+km_final_abt+","
                    + "km_final_as="+ ""+km_final_as+","
                    + "km_rodado_ur="+ ""+km_rodado_ur+","
                    + "km_rodado_abr="+ ""+km_rodado_abr+","
                    + "km_rodado_abt="+ ""+km_rodado_abt+","
                    + "km_rodado_as="+ ""+km_rodado_as+","
                    + "destino_ur='"+destino_ur+"',"
                    + "destino_abr='"+destino_abr+"',"
                    + "destino_abt='"+destino_abt+"',"
                    + "destino_as='"+destino_as+"',"
                    + "km_abastecido_ur="+km_abastecido_ur+","
                    + "km_abastecido_abr="+km_abastecido_abr+","
                    + "km_abastecido_abt="+km_abastecido_abt+","
                    + "km_abastecido_as="+km_abastecido_as+","
                    + "litros_ur="+litros_ur+","
                    + "litros_abr="+litros_abr+","
                    + "litros_abt="+litros_abt+","
                    + "litros_as="+litros_as+","
                    + "combustivel_motoserra='"+comb_motosserra+"',"
                    + "combustivel_desencarcerador='"+comb_desencarcerador+"',"
                    + "combustivel_mpopa='"+comb_popa+"',"
                    + "litros_motoserra="+litros_motoserra+","
                    + "litros_desencarcerador="+litros_desencarcerador+","
                    + "litros_mpopa="+litros_mpopa+","
                    + "alteracao_ur='"+alteracao_ur+"',"
                    + "alteracao_abr='"+alteracao_abr+"',"
                    + "alteracao_abt='"+alteracao_abt+"',"
                    + "alteracao_as='"+alteracao_as+"',"
                    + "manutencao_ur='"+manutencao_ur+"',"
                    + "manutencao_abr='"+manutencao_abr+"',"
                    + "manutencao_abt='"+manutencao_abt+"',"
                    + "manutencao_as='"+manutencao_as+"',"
                    + "documentos_ur='"+documentos_ur+"',"
                    + "documentos_abr='"+documentos_abr+"',"
                    + "documentos_abt='"+documentos_abt+"',"
                    + "documentos_as='"+documentos_as+"'"
                    + "  WHERE livrocov_id="+indice;
            conexao.executeSQL("select * from bombeiro_19.livrocov limit 1");
            conexao.statement.executeUpdate(sqlUpdate);
            jlStatus.setText("Livro alterado com sucesso!");
            String sqlAcesso = "INSERT INTO bombeiro_19.acessos (usuario_login,operacao ) "
                    + "VALUES ('"+user.graduacaoUsuario+" "+user.guerraUsuario+"','Alterou livro do COV do dia: "+dataLivro+" e indice: "+indice+"')";
            conexao.executeSQL("select * from bombeiro_19.acessos order by id desc limit 1");
            conexao.statement.executeUpdate(sqlAcesso);
            limparTela();   
            jlStatus.setText("Alterado com sucesso!");
        }
        catch(SQLException er)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+er.getMessage();
            new arquivoLog(log);
            er.printStackTrace();
            jlStatus.setText("SQLException "+er.getMessage());
        }
        catch(NumberFormatException nfe)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+nfe.getMessage();
            new arquivoLog(log);
            
            jlStatus.setText("NumberFormatException "+nfe.getMessage());
        }
         catch(Exception ex)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+ex.getMessage();
            new arquivoLog(log);
            jlStatus.setText("Exception "+ex.getMessage());
        }
    }

    private void salvarRegistro()
    {
        int firstTopico = 1;
        try
        {
            conexao.executeSQL("select * from bombeiro_19.livrocov ORDER BY livrocov_id DESC LIMIT 1");
            conexao.resultset.first();
            firstTopico = conexao.resultset.getInt("topico_8") + 1;
        }
        catch(SQLException er)
        {
            if(er.getMessage().contains("empty"))
                firstTopico = 1;
        }
        System.out.println(firstTopico);
        try
        {
            Date dataD = jxEscalaData.getDate();
            String dataLivro = (1900+dataD.getYear())+"-"+(1+dataD.getMonth())+"-"+dataD.getDate();
            if((dataD.getMonth()==0)&&(dataD.getDate()==1))
                firstTopico = 1;
            int segundoTopico =  firstTopico + 1;
            int terceiroTopico = segundoTopico + 1;
            int quartoTopico = terceiroTopico + 1;
            int quintoTopico = quartoTopico + 1;
            int sextoTopico = quintoTopico + 1;
            int setimoTopico = sextoTopico + 1;
            int oitavoTopico = setimoTopico + 1;
            Calendar cal = Calendar.getInstance();
            cal.setTime(dataD); // Objeto Date() do usuário
            cal.add(cal.DAY_OF_MONTH, +1);
            Date auxDataProxima = cal.getTime();
            String dataDoDia = new Uteis.Data().getData(dataD);
            String dataDiaSeguinte = new Uteis.Data().getData(auxDataProxima);
            String assuncao = jtaAssuncao.getText();
            String postoCondUr = jtPostoUR59.getText();
            String guerraCondUr = jtGuerraUR59.getText();
            String postoCondAbr = jtPostoABR28.getText();
            String guerraCondAbr = jtGuerraABR28.getText();
            String postoCondAbt = jtPostoABT29.getText();
            String guerraCondAbt = jtGuerraABT29.getText();
            String postoCondAs = jtPostoAS50.getText();
            String guerraCondAs = jtGuerraAS50.getText();
            int km_inicial_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,1).toString());
            int km_inicial_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,1).toString());
            int km_inicial_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,1).toString());
            int km_inicial_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,1).toString());
            int km_final_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,2).toString());
            int km_final_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,2).toString());
            int km_final_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,2).toString());
            int km_final_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,2).toString());
            int km_rodado_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,3).toString());
            int km_rodado_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,3).toString());
            int km_rodado_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,3).toString());
            int km_rodado_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,3).toString());
            String destino_ur = tabelaDeslocamento.getValueAt(0,4).toString();
            String destino_abr = tabelaDeslocamento.getValueAt(1,4).toString();
            String destino_abt = tabelaDeslocamento.getValueAt(2,4).toString();
            String destino_as = tabelaDeslocamento.getValueAt(3,4).toString();
            int km_abastecido_ur;
            int km_abastecido_abr;
            int km_abastecido_abt;
            int km_abastecido_as;
            int litros_ur;
            int litros_abr;
            int litros_abt;
            int litros_as;
            try{km_abastecido_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,5).toString());}catch(NumberFormatException nf1){km_abastecido_ur = 0;}
            try{km_abastecido_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,5).toString());}catch(NumberFormatException nf1){km_abastecido_abr = 0;}
            try{km_abastecido_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,5).toString());}catch(NumberFormatException nf1){km_abastecido_abt = 0;}
            try{km_abastecido_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,5).toString());}catch(NumberFormatException nf1){km_abastecido_as = 0;}
            try{litros_ur = Integer.parseInt(tabelaDeslocamento.getValueAt(0,6).toString());}catch(NumberFormatException nf1){litros_ur = 0;}
            try{litros_abr = Integer.parseInt(tabelaDeslocamento.getValueAt(1,6).toString());}catch(NumberFormatException nf1){litros_abr = 0;}
            try{litros_abt = Integer.parseInt(tabelaDeslocamento.getValueAt(2,6).toString());}catch(NumberFormatException nf1){litros_abt = 0;}
            try{litros_as = Integer.parseInt(tabelaDeslocamento.getValueAt(3,6).toString());}catch(NumberFormatException nf1){litros_as = 0;}
            String comb_motosserra = jcCombustivelMotosserra.getSelectedItem().toString();
            String comb_desencarcerador = jcCombustivelDesencarcerador.getSelectedItem().toString();
            String comb_popa = jcCombustivelPopa.getSelectedItem().toString();
            int litros_motoserra = Integer.parseInt(jsQuantidadeMotosserra.getValue().toString());
            int litros_desencarcerador = Integer.parseInt(jsQuantidadeDesencarcerador.getValue().toString());
            int litros_mpopa = Integer.parseInt(jsQuantidadePopa.getValue().toString());
            String alteracao_ur = jtAlteracaoUR.getText();
            String alteracao_abr = jtAlteracaoABR.getText();
            String alteracao_abt = jtAlteracaoABT.getText();
            String alteracao_as = jtAlteracaoAS.getText();
            String manutencao_ur = jtManutencaoUR.getText();
            String manutencao_abr = jtManutencaoABR.getText();
            String manutencao_abt = jtManutencaoABT.getText();
            String manutencao_as = jtManutencaoAS.getText();
            String documentos_ur = jtDocumentosUR.getText();
            String documentos_abr = jtDocumentosABR.getText();
            String documentos_abt = jtDocumentosABT.getText();
            String documentos_as = jtDocumentosAS.getText();
            String passagemServico = jtaPassagemServico.getText();
            String nomeCompletoAssinatura = jlNomeCompleto.getText();
            String matriculaAssinatura = jlMatricula.getText();
            String postoCovAssinatura = jlPostoAdjunto.getText();
            String SqlInsert = "INSERT INTO bombeiro_19.livrocov "
                    + "("
                    + "data_livro,"
                    + "data_dia,"
                    + "data_amanha,"
                    + "topico_1,"
                    + "topico_2,"
                    + "topico_3,"
                    + "topico_4,"
                    + "topico_5,"
                    + "topico_6,"
                    + "topico_7,"
                    + "topico_8,"
                    + "assuncao,"
                    + "passagem_servico,"
                    + "nome_completo_assinatura,"
                    + "matricula_assinatura,"
                    + "posto_cov_assinatura,"
                    + "posto_condutor_ur,"
                    + "posto_condutor_abr,"
                    + "posto_condutor_abt,"
                    + "posto_condutor_as,"
                    + "nome_guerra_condutor_ur,"
                    + "nome_guerra_condutor_abr,"
                    + "nome_guerra_condutor_abt,"
                    + "nome_guerra_condutor_as,"
                    + "km_inicial_ur,"
                    + "km_inicial_abr,"
                    + "km_inicial_abt,"
                    + "km_inicial_as,"
                    + "km_final_ur,"
                    + "km_final_abr,"
                    + "km_final_abt,"
                    + "km_final_as,"
                    + "km_rodado_ur,"
                    + "km_rodado_abr,"
                    + "km_rodado_abt,"
                    + "km_rodado_as,"
                    + "destino_ur,"
                    + "destino_abr,"
                    + "destino_abt,"
                    + "destino_as,"
                    + "km_abastecido_ur,"
                    + "km_abastecido_abr,"
                    + "km_abastecido_abt,"
                    + "km_abastecido_as,"
                    + "litros_ur,"
                    + "litros_abr,"
                    + "litros_abt,"
                    + "litros_as,"
                    + "combustivel_motoserra,"
                    + "combustivel_desencarcerador,"
                    + "combustivel_mpopa,"
                    + "litros_motoserra,"
                    + "litros_desencarcerador,"
                    + "litros_mpopa,"
                    + "alteracao_ur,"
                    + "alteracao_abr,"
                    + "alteracao_abt,"
                    + "alteracao_as,"
                    + "manutencao_ur,"
                    + "manutencao_abr,"
                    + "manutencao_abt,"
                    + "manutencao_as,"
                    + "documentos_ur,"
                    + "documentos_abr,"
                    + "documentos_abt,"
                    + "documentos_as"
                    + " ) VALUES "
                    + "('"+dataLivro+"',"
                    + "'"+dataDoDia+"',"
                    + "'"+dataDiaSeguinte+"',"
                    + ""+firstTopico+","
                    + ""+segundoTopico+","
                    + ""+terceiroTopico+","
                    + ""+quartoTopico+","
                    + ""+quintoTopico+","
                    + ""+sextoTopico+","
                    + ""+setimoTopico+","
                    + ""+oitavoTopico+","
                    + "'"+assuncao +"',"
                    + "'"+passagemServico +"',"
                    + "'"+nomeCompletoAssinatura +"',"
                    + "'"+matriculaAssinatura +"',"
                    + "'"+postoCovAssinatura +"',"
                    + "'"+postoCondUr+"',"
                    + "'"+postoCondAbr+"',"
                    + "'"+postoCondAbt+"',"
                    + "'"+postoCondAs+"',"
                    + "'"+guerraCondUr+"',"
                    + "'"+guerraCondAbr+"',"
                    + "'"+guerraCondAbt+"',"
                    + "'"+guerraCondAs+"',"
                    + ""+km_inicial_ur+","
                    + ""+km_inicial_abr+","
                    + ""+km_inicial_abt+","
                    + ""+km_inicial_as+","
                    + ""+km_final_ur+","
                    + ""+km_final_abr+","
                    + ""+km_final_abt+","
                    + ""+km_final_as+","
                    + ""+km_rodado_ur+","
                    + ""+km_rodado_abr+","
                    + ""+km_rodado_abt+","
                    + ""+km_rodado_as+","
                    + "'"+destino_ur+"',"
                    + "'"+destino_abr+"',"
                    + "'"+destino_abt+"',"
                    + "'"+destino_as+"',"
                    + ""+km_abastecido_ur+","
                    + ""+km_abastecido_abr+","
                    + ""+km_abastecido_abt+","
                    + ""+km_abastecido_as+","
                    + ""+litros_ur+","
                    + ""+litros_abr+","
                    + ""+litros_abt+","
                    + ""+litros_as+","
                    + "'"+comb_motosserra+"',"
                    + "'"+comb_desencarcerador+"',"
                    + "'"+comb_popa+"',"
                    + ""+litros_motoserra+","
                    + ""+litros_desencarcerador+","
                    + ""+litros_mpopa+","
                    + "'"+alteracao_ur+"',"
                    + "'"+alteracao_abr+"',"
                    + "'"+alteracao_abt+"',"
                    + "'"+alteracao_as+"',"
                    + "'"+manutencao_ur+"',"
                    + "'"+manutencao_abr+"',"
                    + "'"+manutencao_abt+"',"
                    + "'"+manutencao_as+"',"
                    + "'"+documentos_ur+"',"
                    + "'"+documentos_abr+"',"
                    + "'"+documentos_abt+"',"
                    + "'"+documentos_as+"'"
                    + ")";
            conexao.executeSQL("select * from bombeiro_19.livrocov limit 1");
            conexao.statement.executeUpdate(SqlInsert);
            limparTela();
            jlStatus.setText("Cadastro realizado com sucesso!");
        }
        catch(SQLException er)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+er.getMessage();
            new arquivoLog(log);
            er.printStackTrace();
            jlStatus.setText("SQLException "+er.getMessage());
        }
        catch(NumberFormatException nfe)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+nfe.getMessage();
            new arquivoLog(log);
            
            jlStatus.setText("NumberFormatException "+nfe.getMessage());
        }
         catch(Exception ex)
        {
            String log = "|"+new Data().getDataF()+" ás "+new Data().getHora()+"|  ERRO: "+ex.getMessage();
            new arquivoLog(log);
            jlStatus.setText("Exception "+ex.getMessage());
        }
    }
    private String pGraduacao(String guerra)
     {
         try
         {
             conexao.executeSQL("SELECT * FROM bombeiro_19.militar WHERE nome_guerra LIKE '"+guerra+"' limit 1");
             conexao.resultset.first();
             return conexao.resultset.getString("graduacao");
         }
         catch (SQLException sqle)
         {
             new arquivoLog(sqle.getMessage());
             return "XXX";
         }
     }
}
